<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseLTO|Win32">
      <Configuration>ReleaseLTO</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseLTO|x64">
      <Configuration>ReleaseLTO</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\assert.c" />
    <ClCompile Include="..\errno.c" />
    <ClCompile Include="..\extract-dbl.c" />
    <ClCompile Include="..\invalid.c" />
    <ClCompile Include="..\memory.c" />
    <ClCompile Include="..\mpf\abs.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\add.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\add_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\ceilfloor.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\clear.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\clears.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\cmp.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\cmp_d.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\cmp_si.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\cmp_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\cmp_z.c" />
    <ClCompile Include="..\mpf\div.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\div_2exp.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\div_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\dump.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\eq.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\fits_sint.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\fits_slong.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\fits_sshort.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\fits_uint.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\fits_ulong.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\fits_ushort.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\get_d.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\get_dfl_prec.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\get_d_2exp.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\get_prc.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\get_si.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\get_str.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\get_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\init.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\init2.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\inits.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\inp_str.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\int_p.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\iset.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\iset_d.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\iset_si.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\iset_str.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\iset_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\mul.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\mul_2exp.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\mul_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\neg.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\out_str.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\pow_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\random2.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\reldiff.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set_d.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set_dfl_prec.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set_prc.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set_prc_raw.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set_q.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set_si.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set_str.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\set_z.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\size.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\sqrt.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\sqrt_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\sub.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\sub_ui.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\swap.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\trunc.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\ui_div.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\ui_sub.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpf\urandomb.c">
      <ObjectFileName>$(IntDir)\mpf_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpn\generic\add.c" />
    <ClCompile Include="..\mpn\generic\add_1.c" />
    <ClCompile Include="..\mpn\generic\add_err3_n.c" />
    <ClCompile Include="..\mpn\generic\add_n_sub_n.c" />
    <ClCompile Include="..\mpn\generic\bdiv_dbm1c.c" />
    <ClCompile Include="..\mpn\generic\bdiv_q.c" />
    <ClCompile Include="..\mpn\generic\bdiv_qr.c" />
    <ClCompile Include="..\mpn\generic\bdiv_q_1.c" />
    <ClCompile Include="..\mpn\generic\binvert.c" />
    <ClCompile Include="..\mpn\generic\broot.c" />
    <ClCompile Include="..\mpn\generic\brootinv.c" />
    <ClCompile Include="..\mpn\generic\bsqrt.c" />
    <ClCompile Include="..\mpn\generic\bsqrtinv.c" />
    <ClCompile Include="..\mpn\generic\cmp.c">
      <ObjectFileName>$(IntDir)\mpn_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpn\generic\cnd_add_n.c" />
    <ClCompile Include="..\mpn\generic\cnd_sub_n.c" />
    <ClCompile Include="..\mpn\generic\cnd_swap.c" />
    <ClCompile Include="..\mpn\generic\com.c" />
    <ClCompile Include="..\mpn\generic\comb_tables.c" />
    <ClCompile Include="..\mpn\generic\dcpi1_bdiv_q.c" />
    <ClCompile Include="..\mpn\generic\dcpi1_bdiv_qr.c" />
    <ClCompile Include="..\mpn\generic\dcpi1_divappr_q.c" />
    <ClCompile Include="..\mpn\generic\dcpi1_div_q.c" />
    <ClCompile Include="..\mpn\generic\dcpi1_div_qr.c" />
    <ClCompile Include="..\mpn\generic\divexact.c" />
    <ClCompile Include="..\mpn\generic\divis.c" />
    <ClCompile Include="..\mpn\generic\divrem.c" />
    <ClCompile Include="..\mpn\generic\divrem_1.c" />
    <ClCompile Include="..\mpn\generic\div_q.c" />
    <ClCompile Include="..\mpn\generic\div_qr_1.c" />
    <ClCompile Include="..\mpn\generic\div_qr_1n_pi1.c" />
    <ClCompile Include="..\mpn\generic\div_qr_1n_pi2.c" />
    <ClCompile Include="..\mpn\generic\div_qr_1u_pi2.c" />
    <ClCompile Include="..\mpn\generic\div_qr_2.c" />
    <ClCompile Include="..\mpn\generic\div_qr_2n_pi1.c" />
    <ClCompile Include="..\mpn\generic\div_qr_2u_pi1.c" />
    <ClCompile Include="..\mpn\generic\dump.c">
      <ObjectFileName>$(IntDir)\mpn_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpn\generic\fib2_ui.c" />
    <ClCompile Include="..\mpn\generic\gcd.c" />
    <ClCompile Include="..\mpn\generic\gcdext.c" />
    <ClCompile Include="..\mpn\generic\gcdext_1.c" />
    <ClCompile Include="..\mpn\generic\gcdext_lehmer.c" />
    <ClCompile Include="..\mpn\generic\gcd_1.c" />
    <ClCompile Include="..\mpn\generic\gcd_subdiv_step.c" />
    <ClCompile Include="..\mpn\generic\get_d.c">
      <ObjectFileName>$(IntDir)\mpn_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpn\generic\get_str.c">
      <ObjectFileName>$(IntDir)\mpn_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpn\generic\hgcd.c" />
    <ClCompile Include="..\mpn\generic\hgcd2.c" />
    <ClCompile Include="..\mpn\generic\hgcd2_jacobi.c" />
    <ClCompile Include="..\mpn\generic\hgcd_appr.c" />
    <ClCompile Include="..\mpn\generic\hgcd_jacobi.c" />
    <ClCompile Include="..\mpn\generic\hgcd_matrix.c" />
    <ClCompile Include="..\mpn\generic\hgcd_reduce.c" />
    <ClCompile Include="..\mpn\generic\hgcd_step.c" />
    <ClCompile Include="..\mpn\generic\invert.c" />
    <ClCompile Include="..\mpn\generic\invertappr.c" />
    <ClCompile Include="..\mpn\generic\jacbase.c" />
    <ClCompile Include="..\mpn\generic\jacobi.c" />
    <ClCompile Include="..\mpn\generic\jacobi_2.c" />
    <ClCompile Include="..\mpn\generic\matrix22_mul.c" />
    <ClCompile Include="..\mpn\generic\matrix22_mul1_inverse_vector.c" />
    <ClCompile Include="..\mpn\generic\mod_1.c" />
    <ClCompile Include="..\mpn\generic\mod_1_4.c" />
    <ClCompile Include="..\mpn\generic\mod_34lsub1.c" />
    <ClCompile Include="..\mpn\generic\mul.c">
      <ObjectFileName>$(IntDir)\mpn_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpn\generic\mullo_basecase.c" />
    <ClCompile Include="..\mpn\generic\mullo_n.c" />
    <ClCompile Include="..\mpn\generic\mulmid.c" />
    <ClCompile Include="..\mpn\generic\mulmid_n.c" />
    <ClCompile Include="..\mpn\generic\mulmod_bnm1.c" />
    <ClCompile Include="..\mpn\generic\mul_basecase.c" />
    <ClCompile Include="..\mpn\generic\mul_fft.c" />
    <ClCompile Include="..\mpn\generic\mul_n.c" />
    <ClCompile Include="..\mpn\generic\mu_bdiv_q.c" />
    <ClCompile Include="..\mpn\generic\mu_bdiv_qr.c" />
    <ClCompile Include="..\mpn\generic\mu_divappr_q.c" />
    <ClCompile Include="..\mpn\generic\mu_div_q.c" />
    <ClCompile Include="..\mpn\generic\mu_div_qr.c" />
    <ClCompile Include="..\mpn\generic\neg.c">
      <ObjectFileName>$(IntDir)\mpn_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpn\generic\nussbaumer_mul.c" />
    <ClCompile Include="..\mpn\generic\perfpow.c" />
    <ClCompile Include="..\mpn\generic\perfsqr.c" />
    <ClCompile Include="..\mpn\generic\powlo.c" />
    <ClCompile Include="..\mpn\generic\powm.c" />
    <ClCompile Include="..\mpn\generic\pow_1.c" />
    <ClCompile Include="..\mpn\generic\pre_mod_1.c" />
    <ClCompile Include="..\mpn\generic\random.c" />
    <ClCompile Include="..\mpn\generic\random2.c" />
    <ClCompile Include="..\mpn\generic\redc_2.c" />
    <ClCompile Include="..\mpn\generic\redc_n.c" />
    <ClCompile Include="..\mpn\generic\remove.c" />
    <ClCompile Include="..\mpn\generic\rootrem.c" />
    <ClCompile Include="..\mpn\generic\sbpi1_bdiv_q.c" />
    <ClCompile Include="..\mpn\generic\sbpi1_bdiv_qr.c" />
    <ClCompile Include="..\mpn\generic\sbpi1_divappr_q.c" />
    <ClCompile Include="..\mpn\generic\sbpi1_div_q.c" />
    <ClCompile Include="..\mpn\generic\sbpi1_div_qr.c" />
    <ClCompile Include="..\mpn\generic\scan0.c" />
    <ClCompile Include="..\mpn\generic\scan1.c" />
    <ClCompile Include="..\mpn\generic\sec_invert.c" />
    <ClCompile Include="..\mpn\generic\sec_mul.c" />
    <ClCompile Include="..\mpn\generic\sec_powm.c" />
    <ClCompile Include="..\mpn\generic\sec_sqr.c" />
    <ClCompile Include="..\mpn\generic\sec_tabselect.c" />
    <ClCompile Include="..\mpn\generic\set_str.c">
      <ObjectFileName>$(IntDir)\mpn_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpn\generic\sizeinbase.c" />
    <ClCompile Include="..\mpn\generic\sqr.c" />
    <ClCompile Include="..\mpn\generic\sqrlo.c" />
    <ClCompile Include="..\mpn\generic\sqrlo_basecase.c" />
    <ClCompile Include="..\mpn\generic\sqrmod_bnm1.c" />
    <ClCompile Include="..\mpn\generic\sqrtrem.c" />
    <ClCompile Include="..\mpn\generic\sub.c">
      <ObjectFileName>$(IntDir)\mpn_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpn\generic\sub_1.c" />
    <ClCompile Include="..\mpn\generic\sub_err3_n.c" />
    <ClCompile Include="..\mpn\generic\tdiv_qr.c" />
    <ClCompile Include="..\mpn\generic\toom22_mul.c" />
    <ClCompile Include="..\mpn\generic\toom2_sqr.c" />
    <ClCompile Include="..\mpn\generic\toom32_mul.c" />
    <ClCompile Include="..\mpn\generic\toom33_mul.c" />
    <ClCompile Include="..\mpn\generic\toom3_sqr.c" />
    <ClCompile Include="..\mpn\generic\toom42_mul.c" />
    <ClCompile Include="..\mpn\generic\toom42_mulmid.c" />
    <ClCompile Include="..\mpn\generic\toom43_mul.c" />
    <ClCompile Include="..\mpn\generic\toom44_mul.c" />
    <ClCompile Include="..\mpn\generic\toom4_sqr.c" />
    <ClCompile Include="..\mpn\generic\toom52_mul.c" />
    <ClCompile Include="..\mpn\generic\toom53_mul.c" />
    <ClCompile Include="..\mpn\generic\toom54_mul.c" />
    <ClCompile Include="..\mpn\generic\toom62_mul.c" />
    <ClCompile Include="..\mpn\generic\toom63_mul.c" />
    <ClCompile Include="..\mpn\generic\toom6h_mul.c" />
    <ClCompile Include="..\mpn\generic\toom6_sqr.c" />
    <ClCompile Include="..\mpn\generic\toom8h_mul.c" />
    <ClCompile Include="..\mpn\generic\toom8_sqr.c" />
    <ClCompile Include="..\mpn\generic\toom_couple_handling.c" />
    <ClCompile Include="..\mpn\generic\toom_eval_dgr3_pm1.c" />
    <ClCompile Include="..\mpn\generic\toom_eval_dgr3_pm2.c" />
    <ClCompile Include="..\mpn\generic\toom_eval_pm1.c" />
    <ClCompile Include="..\mpn\generic\toom_eval_pm2.c" />
    <ClCompile Include="..\mpn\generic\toom_eval_pm2exp.c" />
    <ClCompile Include="..\mpn\generic\toom_eval_pm2rexp.c" />
    <ClCompile Include="..\mpn\generic\toom_interpolate_12pts.c" />
    <ClCompile Include="..\mpn\generic\toom_interpolate_16pts.c" />
    <ClCompile Include="..\mpn\generic\toom_interpolate_5pts.c" />
    <ClCompile Include="..\mpn\generic\toom_interpolate_6pts.c" />
    <ClCompile Include="..\mpn\generic\toom_interpolate_7pts.c" />
    <ClCompile Include="..\mpn\generic\toom_interpolate_8pts.c" />
    <ClCompile Include="..\mpn\generic\trialdiv.c" />
    <ClCompile Include="..\mpn\generic\zero.c" />
    <ClCompile Include="..\mpq\abs.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\aors.c" />
    <ClCompile Include="..\mpq\canonicalize.c" />
    <ClCompile Include="..\mpq\clear.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\clears.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\cmp.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\cmp_si.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\cmp_ui.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\div.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\equal.c" />
    <ClCompile Include="..\mpq\get_d.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\get_den.c" />
    <ClCompile Include="..\mpq\get_num.c" />
    <ClCompile Include="..\mpq\get_str.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\init.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\inits.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\inp_str.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\inv.c" />
    <ClCompile Include="..\mpq\md_2exp.c" />
    <ClCompile Include="..\mpq\mul.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\neg.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\out_str.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\set.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\set_d.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\set_den.c" />
    <ClCompile Include="..\mpq\set_f.c" />
    <ClCompile Include="..\mpq\set_num.c" />
    <ClCompile Include="..\mpq\set_si.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\set_str.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\set_ui.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\set_z.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpq\swap.c">
      <ObjectFileName>$(IntDir)\mpq_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\2fac_ui.c" />
    <ClCompile Include="..\mpz\abs.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\add.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\add_ui.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\and.c" />
    <ClCompile Include="..\mpz\aorsmul.c" />
    <ClCompile Include="..\mpz\aorsmul_i.c" />
    <ClCompile Include="..\mpz\array_init.c" />
    <ClCompile Include="..\mpz\bin_ui.c" />
    <ClCompile Include="..\mpz\bin_uiui.c" />
    <ClCompile Include="..\mpz\cdiv_q.c" />
    <ClCompile Include="..\mpz\cdiv_qr.c" />
    <ClCompile Include="..\mpz\cdiv_qr_ui.c" />
    <ClCompile Include="..\mpz\cdiv_q_ui.c" />
    <ClCompile Include="..\mpz\cdiv_r.c" />
    <ClCompile Include="..\mpz\cdiv_r_ui.c" />
    <ClCompile Include="..\mpz\cdiv_ui.c" />
    <ClCompile Include="..\mpz\cfdiv_q_2exp.c" />
    <ClCompile Include="..\mpz\cfdiv_r_2exp.c" />
    <ClCompile Include="..\mpz\clear.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\clears.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\clrbit.c" />
    <ClCompile Include="..\mpz\cmp.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\cmpabs.c" />
    <ClCompile Include="..\mpz\cmpabs_d.c" />
    <ClCompile Include="..\mpz\cmpabs_ui.c" />
    <ClCompile Include="..\mpz\cmp_d.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\cmp_si.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\cmp_ui.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\com.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\combit.c" />
    <ClCompile Include="..\mpz\cong.c" />
    <ClCompile Include="..\mpz\cong_2exp.c" />
    <ClCompile Include="..\mpz\cong_ui.c" />
    <ClCompile Include="..\mpz\divegcd.c" />
    <ClCompile Include="..\mpz\divexact.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\dive_ui.c" />
    <ClCompile Include="..\mpz\divis.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\divis_2exp.c" />
    <ClCompile Include="..\mpz\divis_ui.c" />
    <ClCompile Include="..\mpz\dump.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\export.c" />
    <ClCompile Include="..\mpz\fac_ui.c" />
    <ClCompile Include="..\mpz\fdiv_q.c" />
    <ClCompile Include="..\mpz\fdiv_qr.c" />
    <ClCompile Include="..\mpz\fdiv_qr_ui.c" />
    <ClCompile Include="..\mpz\fdiv_q_ui.c" />
    <ClCompile Include="..\mpz\fdiv_r.c" />
    <ClCompile Include="..\mpz\fdiv_r_ui.c" />
    <ClCompile Include="..\mpz\fdiv_ui.c" />
    <ClCompile Include="..\mpz\fib2_ui.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\fib_ui.c" />
    <ClCompile Include="..\mpz\fits_sint.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\fits_slong.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\fits_sshort.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\fits_uint.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\fits_ulong.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\fits_ushort.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\gcd.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\gcdext.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\gcd_ui.c" />
    <ClCompile Include="..\mpz\getlimbn.c" />
    <ClCompile Include="..\mpz\get_d.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\get_d_2exp.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\get_si.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\get_str.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\get_ui.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\hamdist.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\import.c" />
    <ClCompile Include="..\mpz\init.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\init2.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\inits.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\inp_raw.c" />
    <ClCompile Include="..\mpz\inp_str.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\invert.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\ior.c" />
    <ClCompile Include="..\mpz\iset.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\iset_d.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\iset_si.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\iset_str.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\iset_ui.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\jacobi.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\kronsz.c" />
    <ClCompile Include="..\mpz\kronuz.c" />
    <ClCompile Include="..\mpz\kronzs.c" />
    <ClCompile Include="..\mpz\kronzu.c" />
    <ClCompile Include="..\mpz\lcm.c" />
    <ClCompile Include="..\mpz\lcm_ui.c" />
    <ClCompile Include="..\mpz\limbs_finish.c" />
    <ClCompile Include="..\mpz\limbs_modify.c" />
    <ClCompile Include="..\mpz\limbs_read.c" />
    <ClCompile Include="..\mpz\limbs_write.c" />
    <ClCompile Include="..\mpz\lucnum2_ui.c" />
    <ClCompile Include="..\mpz\lucnum_ui.c" />
    <ClCompile Include="..\mpz\mfac_uiui.c" />
    <ClCompile Include="..\mpz\millerrabin.c" />
    <ClCompile Include="..\mpz\mod.c" />
    <ClCompile Include="..\mpz\mul.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\mul_2exp.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\mul_si.c" />
    <ClCompile Include="..\mpz\mul_ui.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\neg.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\nextprime.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\n_pow_ui.c" />
    <ClCompile Include="..\mpz\oddfac_1.c" />
    <ClCompile Include="..\mpz\out_raw.c" />
    <ClCompile Include="..\mpz\out_str.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\perfpow.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\perfsqr.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\popcount.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\powm.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\powm_sec.c" />
    <ClCompile Include="..\mpz\powm_ui.c" />
    <ClCompile Include="..\mpz\pow_ui.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\pprime_p.c" />
    <ClCompile Include="..\mpz\primorial_ui.c" />
    <ClCompile Include="..\mpz\prodlimbs.c" />
    <ClCompile Include="..\mpz\random.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\random2.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\realloc.c" />
    <ClCompile Include="..\mpz\realloc2.c" />
    <ClCompile Include="..\mpz\remove.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\roinit_n.c" />
    <ClCompile Include="..\mpz\root.c" />
    <ClCompile Include="..\mpz\rootrem.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\rrandomb.c" />
    <ClCompile Include="..\mpz\scan0.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\scan1.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\set.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\setbit.c" />
    <ClCompile Include="..\mpz\set_d.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\set_f.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\set_q.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\set_si.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\set_str.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\set_ui.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\size.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\sizeinbase.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\sqrt.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\sqrtrem.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\sub.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\sub_ui.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\swap.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\tdiv_q.c" />
    <ClCompile Include="..\mpz\tdiv_qr.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\tdiv_qr_ui.c" />
    <ClCompile Include="..\mpz\tdiv_q_2exp.c" />
    <ClCompile Include="..\mpz\tdiv_q_ui.c" />
    <ClCompile Include="..\mpz\tdiv_r.c" />
    <ClCompile Include="..\mpz\tdiv_r_2exp.c" />
    <ClCompile Include="..\mpz\tdiv_r_ui.c" />
    <ClCompile Include="..\mpz\tdiv_ui.c" />
    <ClCompile Include="..\mpz\tstbit.c" />
    <ClCompile Include="..\mpz\ui_pow_ui.c" />
    <ClCompile Include="..\mpz\ui_sub.c">
      <ObjectFileName>$(IntDir)\mpz_%(Filename).obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="..\mpz\urandomb.c" />
    <ClCompile Include="..\mpz\urandomm.c" />
    <ClCompile Include="..\mpz\xor.c" />
    <ClCompile Include="..\mp_bpl.c" />
    <ClCompile Include="..\mp_clz_tab.c" />
    <ClCompile Include="..\mp_dv_tab.c" />
    <ClCompile Include="..\mp_get_fns.c" />
    <ClCompile Include="..\mp_minv_tab.c" />
    <ClCompile Include="..\mp_set_fns.c" />
    <ClCompile Include="..\nextprime.c" />
    <ClCompile Include="..\primesieve.c" />
    <ClCompile Include="..\printf\asprintf.c" />
    <ClCompile Include="..\printf\asprntffuns.c" />
    <ClCompile Include="..\printf\doprnt.c" />
    <ClCompile Include="..\printf\doprntf.c" />
    <ClCompile Include="..\printf\doprnti.c" />
    <ClCompile Include="..\printf\fprintf.c" />
    <ClCompile Include="..\printf\obprintf.c" />
    <ClCompile Include="..\printf\obprntffuns.c" />
    <ClCompile Include="..\printf\obvprintf.c" />
    <ClCompile Include="..\printf\printf.c" />
    <ClCompile Include="..\printf\printffuns.c" />
    <ClCompile Include="..\printf\repl-vsnprintf.c" />
    <ClCompile Include="..\printf\snprintf.c" />
    <ClCompile Include="..\printf\snprntffuns.c" />
    <ClCompile Include="..\printf\sprintf.c" />
    <ClCompile Include="..\printf\sprintffuns.c" />
    <ClCompile Include="..\printf\vasprintf.c" />
    <ClCompile Include="..\printf\vfprintf.c" />
    <ClCompile Include="..\printf\vprintf.c" />
    <ClCompile Include="..\printf\vsnprintf.c" />
    <ClCompile Include="..\printf\vsprintf.c" />
    <ClCompile Include="..\rand\rand.c" />
    <ClCompile Include="..\rand\randbui.c" />
    <ClCompile Include="..\rand\randclr.c" />
    <ClCompile Include="..\rand\randdef.c" />
    <ClCompile Include="..\rand\randiset.c" />
    <ClCompile Include="..\rand\randlc2s.c" />
    <ClCompile Include="..\rand\randlc2x.c" />
    <ClCompile Include="..\rand\randmt.c" />
    <ClCompile Include="..\rand\randmts.c" />
    <ClCompile Include="..\rand\randmui.c" />
    <ClCompile Include="..\rand\rands.c" />
    <ClCompile Include="..\rand\randsd.c" />
    <ClCompile Include="..\rand\randsdui.c" />
    <ClCompile Include="..\scanf\doscan.c" />
    <ClCompile Include="..\scanf\fscanf.c" />
    <ClCompile Include="..\scanf\fscanffuns.c" />
    <ClCompile Include="..\scanf\scanf.c" />
    <ClCompile Include="..\scanf\sscanf.c" />
    <ClCompile Include="..\scanf\sscanffuns.c" />
    <ClCompile Include="..\scanf\vfscanf.c" />
    <ClCompile Include="..\scanf\vscanf.c" />
    <ClCompile Include="..\scanf\vsscanf.c" />
    <ClCompile Include="..\tal-reent.c" />
    <ClCompile Include="..\version.c" />
    <ClCompile Include="mpn\sec_add_1.c" />
    <ClCompile Include="mpn\sec_div_qr.c" />
    <ClCompile Include="mpn\sec_div_r.c" />
    <ClCompile Include="mpn\sec_pi1_div_qr.c" />
    <ClCompile Include="mpn\sec_pi1_div_r.c" />
    <ClCompile Include="mpn\sec_sub_1.c" />
    <ClCompile Include="x86\mpn\fib_table.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="x86\mpn\mp_bases.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="x86_64\mpn\fib_table.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="x86_64\mpn\mp_bases.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\mpf\fits_s.h" />
    <ClInclude Include="..\mpf\fits_u.h" />
    <ClInclude Include="..\mpn\generic\gmp-mparam.h" />
    <ClInclude Include="..\mpz\aors.h" />
    <ClInclude Include="..\mpz\aors_ui.h" />
    <ClInclude Include="..\mpz\fits_s.h" />
    <ClInclude Include="..\mpz\mul_i.h" />
    <ClInclude Include="..\rand\randmt.h" />
    <ClInclude Include="config.h" />
    <ClInclude Include="gmp.h" />
    <ClInclude Include="version.h" />
    <ClInclude Include="x86\mpn\perfsqr.h" />
    <ClInclude Include="x86_64\mpn\perfsqr.h" />
  </ItemGroup>
  <ItemGroup>
    <YASM Include="yasm\add_err1_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\add_err2_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\divexact_1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\divexact_by3c.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\divexact_byfobm1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\divrem_2.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\divrem_euclidean_qr_1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\divrem_euclidean_qr_2.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\modexact_1c_odd.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\mulmid_basecase.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\addmul_1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\addmul_2.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\add_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\andn_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\and_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\com_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\copyd.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\copyi.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\divexact_byff.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\divrem_hensel_qr_1_1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\hamdist.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\iorn_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\ior_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\karaadd.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\karasub.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\lshift.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\lshift1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\lshiftc.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\mod_1_1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\mod_1_2.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\mod_1_3.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\mul_1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\mul_2.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\nand_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\nior_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\popcount.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\redc_1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\rshift.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\rsh_divrem_hensel_qr_1_1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\rsh_divrem_hensel_qr_1_2.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\store.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\submul_1.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\sub_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\xnor_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sandybridge\xor_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sqr_basecase.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sub_err1_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\sub_err2_n.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\udiv_qrnnd.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
    <YASM Include="yasm\umul_ppmm.asm">
      <IncludePaths>yasm</IncludePaths>
    </YASM>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{29DCC424-3CB3-4452-81A4-81A6A35127EC}</ProjectGuid>
    <RootNamespace>libgmp-sandybridge</RootNamespace>
    <ProjectName>libgmp-sandybridge</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="yasm\vsyasm.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libgmpd</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libgmpd</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>gmpd</TargetName>
    <LinkIncremental>false</LinkIncremental>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>gmpd</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <LinkIncremental>false</LinkIncremental>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libgmp</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libgmp</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libgmp</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>libgmp</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>gmp</TargetName>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>gmp</TargetName>
    <OutDir>$(ProjectDir)..\..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0502;_DEBUG;DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86;.\x86\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0600;_DEBUG;DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86_64;.\x86_64\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0502;DLL_EXPORT;_DEBUG;DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86;.\x86\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0600;DLL_EXPORT;_DEBUG;DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86_64;.\x86_64\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0502;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86;.\x86\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0502;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86;.\x86\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\x86\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0600;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86_64;.\x86_64\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0600;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86_64;.\x86_64\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\x64\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0502;DLL_EXPORT;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86;.\x86\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x86\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x86\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x86\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>inline=__inline;__GMP_WITHIN_GMP;NO_ASM;HAVE_CONFIG_H;_WIN32_WINNT=0x0600;DLL_EXPORT;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\;.\mpn;.\x86_64;.\x86_64\mpn;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4146;4018;4554;4090;4267;4101;4334;4723;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\x64\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\lib\x64\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\lib\x64\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy .\gmp.h $(OutDir)\include\
mkdir $(OutDir)\licenses
copy ..\COPYING.LESSERv3 $(OutDir)\licenses\gmp.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\gmp.h (
del $(OutDir)\include\gmp.h
)
if exist ..\fac_table.h (
del ..\fac_table.h
)
if exist ..\fib_table.h (
del ..\fib_table.h
)
if exist ..\gmp.h (
del ..\gmp.h
)
if exist ..\mp_bases.h (
del ..\mp_bases.h
)
if exist ..\trialdivtab.h (
del ..\trialdivtab.h
)
if exist ..\mpn\perfsqr.h (
del ..\mpn\perfsqr.h
)
if exist ..\mpn\jacobitab.h (
del ..\mpn\jacobitab.h
)
if exist ..\mpn\mp_bases.c (
del ..\mpn\mp_bases.c
)
if exist ..\mpn\fib_table.c (
del ..\mpn\fib_table.c
)
if exist ..\gmp-mparam.h (
del ..\gmp-mparam.h
)
if not exist .\gmp-mparam.h (
copy ..\mpn\generic\gmp-mparam.h .\gmp-mparam.h
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist $(OutDir)\include\gmp.h (
del /f /q $(OutDir)\include\gmp.h
)
if exist $(OutDir)\licenses\gmp.txt (
del /f /q $(OutDir)\licenses\gmp.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="yasm\vsyasm.targets" />
  </ImportGroup>
</Project>